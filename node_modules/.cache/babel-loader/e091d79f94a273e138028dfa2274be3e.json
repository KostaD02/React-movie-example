{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdaut\\\\my-app\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = cId => {\n      const vassss = {\n        id: 1,\n        value: 10\n      };\n      const newCounters = this.state.counters;\n      newCounters.forEach(ccc => ccc.id !== cId ? ccc : ccc = vassss);\n      console.log(\"kkk\", newCounters);\n      console.log(\"kkk1\", this.state.counters);\n      console.log(\"kkk2\", vassss);\n      this.setState({\n        counters: newCounters\n      });\n    };\n\n    this.handleDelete = cId => {\n      const newCounters = this.state.counters.filter(ccc => ccc.id !== cId ? ccc : null);\n      this.setState({\n        counters: newCounters\n      });\n    };\n  }\n\n  render() {\n    console.log(\"vasia\", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.counters.map(c => /*#__PURE__*/_jsxDEV(Counter, {\n        counterId: c.id,\n        counterValue: c.value,\n        onDelete: this.handleDelete,\n        onIncrement: this.handleIncrement\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["C:/Users/kdaut/my-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","cId","vassss","newCounters","forEach","ccc","console","log","setState","handleDelete","filter","render","map","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BG,KAF6B,GAErB;AAAEC,MAAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAAD;AAAZ,KAFqB;;AAAA,SAI7BC,eAJ6B,GAIVC,GAAD,IAAS;AACvB,YAAMC,MAAM,GAAE;AAACJ,QAAAA,EAAE,EAAC,CAAJ;AAAMC,QAAAA,KAAK,EAAC;AAAZ,OAAd;AACA,YAAMI,WAAW,GAAG,KAAKP,KAAL,CAAWC,QAA/B;AAEAM,MAAAA,WAAW,CAACC,OAAZ,CAAqBC,GAAD,IAAUA,GAAG,CAACP,EAAJ,KAAWG,GAAZ,GAAkBI,GAAlB,GAAsBA,GAAG,GAACH,MAAvD;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBJ,WAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKX,KAAL,CAAWC,QAA9B;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,MAAnB;AAEA,WAAKM,QAAL,CAAe;AAACX,QAAAA,QAAQ,EAAEM;AAAX,OAAf;AAEH,KAhB4B;;AAAA,SAiB7BM,YAjB6B,GAiBbR,GAAD,IAAS;AAEpB,YAAME,WAAW,GAAG,KAAKP,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BL,GAAD,IAAUA,GAAG,CAACP,EAAJ,KAAWG,GAAZ,GAAkBI,GAAlB,GAAwB,IAA5D,CAApB;AACA,WAAKG,QAAL,CAAe;AAACX,QAAAA,QAAQ,EAAEM;AAAX,OAAf;AACH,KArB4B;AAAA;;AAuB7BQ,EAAAA,MAAM,GAAG;AACLL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKX,KAAzB;AACA,wBACI;AAAA,gBACK,KAAKA,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAyBC,CAAD,iBACrB,QAAC,OAAD;AAAoB,QAAA,SAAS,EAAIA,CAAC,CAACf,EAAnC;AAAuC,QAAA,YAAY,EAAEe,CAAC,CAACd,KAAvD;AACA,QAAA,QAAQ,EAAI,KAAKU,YADjB;AAEA,QAAA,WAAW,EAAI,KAAKT;AAFpB,SAAca,CAAC,CAACf,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAnC4B;;AAsCjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    //state = { counters : [{id: 1, value: 0}, {id: 2, value: 0},{id: 3, value: 0},{id: 4, value: 0}] }\r\n    state = { counters: [{id:1,value:0}]}\r\n\r\n    handleIncrement = (cId) => {\r\n        const vassss ={id:1,value:10};\r\n        const newCounters = this.state.counters;\r\n\r\n        newCounters.forEach((ccc) => (ccc.id !== cId)? ccc:ccc=vassss);     \r\n        \r\n        console.log(\"kkk\",newCounters);   \r\n        console.log(\"kkk1\",this.state.counters); \r\n        console.log(\"kkk2\",vassss); \r\n\r\n        this.setState( {counters :newCounters } );\r\n        \r\n    };\r\n    handleDelete = (cId) => {\r\n        \r\n        const newCounters = this.state.counters.filter((ccc) => (ccc.id !== cId)? ccc : null);\r\n        this.setState( {counters :newCounters } ) ;\r\n    }\r\n    \r\n    render() { \r\n        console.log(\"vasia\",this.state);\r\n        return ( \r\n            <div>\r\n                {this.state.counters.map((c)=>\r\n                    <Counter key={c.id} counterId = {c.id} counterValue={c.value} \r\n                    onDelete = {this.handleDelete}\r\n                    onIncrement = {this.handleIncrement}\r\n                    />)}\r\n\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Counters;"]},"metadata":{},"sourceType":"module"}
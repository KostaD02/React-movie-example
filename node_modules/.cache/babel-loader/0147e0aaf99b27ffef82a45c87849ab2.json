{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdaut\\\\my-app\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = cId => {\n      const newCounters = this.state.counters;\n      newCounters.forEach(function (item) {\n        if (item.id === cId) item.value++;\n      });\n      this.setState({\n        counters: newCounters\n      });\n    };\n\n    this.handleDecrement = cId => {\n      const newCounters = this.state.counters;\n      newCounters.forEach(function (item) {\n        if (item.id === cId) item.value--;\n      });\n      this.setState({\n        counters: newCounters\n      });\n    };\n\n    this.handleDelete = cId => {\n      const newCounters = this.state.counters.filter(ccc => ccc.id !== cId ? ccc : null);\n      this.setState({\n        counters: newCounters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.counters.map(c => /*#__PURE__*/_jsxDEV(Counter, {\n        counterId: c.id,\n        counterValue: c.value,\n        onDelete: this.handleDelete,\n        onIncrement: this.handleIncrement,\n        onDecrement: this.handleDecrement\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["C:/Users/kdaut/my-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","cId","newCounters","forEach","item","setState","handleDecrement","handleDelete","filter","ccc","render","map","c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AAAEC,MAAAA,QAAQ,EAAG,CAAC;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAAD,EAAoB;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAApB,EAAsC;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAAtC,EAAwD;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAAxD;AAAb,KADqB;;AAAA,SAE7BC,eAF6B,GAEVC,GAAD,IAAS;AACvB,YAAMC,WAAW,GAAG,KAAKN,KAAL,CAAWC,QAA/B;AACAK,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAASC,IAAT,EAAe;AAAC,YAAGA,IAAI,CAACN,EAAL,KAAUG,GAAb,EAAkBG,IAAI,CAACL,KAAL;AAAc,OAApE;AACA,WAAKM,QAAL,CAAe;AAACR,QAAAA,QAAQ,EAAEK;AAAX,OAAf;AACH,KAN4B;;AAAA,SAO7BI,eAP6B,GAOVL,GAAD,IAAS;AACvB,YAAMC,WAAW,GAAG,KAAKN,KAAL,CAAWC,QAA/B;AACAK,MAAAA,WAAW,CAACC,OAAZ,CAAoB,UAASC,IAAT,EAAe;AAAC,YAAGA,IAAI,CAACN,EAAL,KAAUG,GAAb,EAAkBG,IAAI,CAACL,KAAL;AAAc,OAApE;AACA,WAAKM,QAAL,CAAe;AAACR,QAAAA,QAAQ,EAAEK;AAAX,OAAf;AAEH,KAZ4B;;AAAA,SAa7BK,YAb6B,GAabN,GAAD,IAAS;AACpB,YAAMC,WAAW,GAAG,KAAKN,KAAL,CAAWC,QAAX,CAAoBW,MAApB,CAA4BC,GAAD,IAAUA,GAAG,CAACX,EAAJ,KAAWG,GAAZ,GAAkBQ,GAAlB,GAAwB,IAA5D,CAApB;AACA,WAAKJ,QAAL,CAAe;AAACR,QAAAA,QAAQ,EAAEK;AAAX,OAAf;AACH,KAhB4B;AAAA;;AAiB7BQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAyBC,CAAD,iBACrB,QAAC,OAAD;AAAoB,QAAA,SAAS,EAAIA,CAAC,CAACd,EAAnC;AAAuC,QAAA,YAAY,EAAEc,CAAC,CAACb,KAAvD;AACA,QAAA,QAAQ,EAAI,KAAKQ,YADjB;AAEA,QAAA,WAAW,EAAI,KAAKP,eAFpB;AAGA,QAAA,WAAW,EAAE,KAAKM;AAHlB,SAAcM,CAAC,CAACd,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA5B4B;;AA+BjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Counter from './counter';\r\n\r\nclass Counters extends Component {\r\n    state = { counters : [{id: 1, value: 0}, {id: 2, value: 0},{id: 3, value: 0},{id: 4, value: 0}] }\r\n    handleIncrement = (cId) => {\r\n        const newCounters = this.state.counters;\r\n        newCounters.forEach(function(item) {if(item.id===cId) item.value++;});\r\n        this.setState( {counters :newCounters } );\r\n    };\r\n    handleDecrement = (cId) => {\r\n        const newCounters = this.state.counters;\r\n        newCounters.forEach(function(item) {if(item.id===cId) item.value--;});\r\n        this.setState( {counters :newCounters } );\r\n        \r\n    };\r\n    handleDelete = (cId) => {\r\n        const newCounters = this.state.counters.filter((ccc) => (ccc.id !== cId)? ccc : null);\r\n        this.setState( {counters :newCounters } ) ;\r\n    }\r\n    render() { \r\n        return ( \r\n            <div>\r\n                {this.state.counters.map((c)=>\r\n                    <Counter key={c.id} counterId = {c.id} counterValue={c.value} \r\n                    onDelete = {this.handleDelete}\r\n                    onIncrement = {this.handleIncrement}\r\n                    onDecrement={this.handleDecrement}\r\n                    />)}\r\n            </div>            \r\n        );\r\n    }\r\n}\r\n \r\nexport default Counters;"]},"metadata":{},"sourceType":"module"}
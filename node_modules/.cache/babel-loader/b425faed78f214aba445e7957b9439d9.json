{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdaut\\\\my-app\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport \"../movies.css\";\nimport MoviesTable from \"./moviesTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies: movies\n      });\n    };\n\n    this.handleClick = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        movies: getMovies()\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"There are no movies in the database \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleReset(),\n        className: \"btn btn-warning m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Showing \", filtered.length, \" movies in the database \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.handleReset(),\n          className: \"btn btn-warning m-2\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleClick,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["C:/Users/kdaut/my-app/src/components/movies.jsx"],"names":["React","Component","ListGroup","getMovies","Pagination","paginate","getGenres","MoviesTable","Movies","state","movies","genres","currentPage","pageSize","handleDelete","movie","filter","m","_id","setState","handleClick","index","indexOf","liked","handleReset","handlePageChange","page","handleGenreSelect","genre","selectedGenre","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BQ,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,WAAW,EAAE,CAHP;AAINC,MAAAA,QAAQ,EAAC;AAJH,KADqB;;AAAA,SAW7BC,YAX6B,GAWbC,KAAD,IAAW;AACxB,YAAML,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAX,CAAkBM,MAAlB,CAA0BC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,KAAK,CAACG,GAAhD,CAAf;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACD,KAd4B;;AAAA,SAe7BU,WAf6B,GAedL,KAAD,IAAW;AACvB,YAAML,MAAM,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,MAAf,CAAf;AACA,YAAMW,KAAK,GAAGX,MAAM,CAACY,OAAP,CAAeP,KAAf,CAAd;AACAL,MAAAA,MAAM,CAACW,KAAD,CAAN,GAAgB,EAAE,GAAGX,MAAM,CAACW,KAAD;AAAX,OAAhB;AACAX,MAAAA,MAAM,CAACW,KAAD,CAAN,CAAcE,KAAd,GAAsB,CAACb,MAAM,CAACW,KAAD,CAAN,CAAcE,KAArC;AACA,WAAKJ,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KArB4B;;AAAA,SAsB7Bc,WAtB6B,GAsBf,MAAM;AAClB,WAAKL,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEP,SAAS;AAAnB,OAAd;AACD,KAxB4B;;AAAA,SAyB7BsB,gBAzB6B,GAyBVC,IAAI,IAAG;AACxB,WAAKP,QAAL,CAAc;AAACP,QAAAA,WAAW,EAACc;AAAb,OAAd;AACD,KA3B4B;;AAAA,SA4B7BC,iBA5B6B,GA4BTC,KAAK,IAAI;AAC3B,WAAKT,QAAL,CAAc;AAACU,QAAAA,aAAa,EAAED,KAAhB;AAAwBhB,QAAAA,WAAW,EAAE;AAArC,OAAd;AACD,KA9B4B;AAAA;;AAO7BkB,EAAAA,iBAAiB,GAAE;AACjB,UAAMnB,MAAM,GAAG,CAAC;AAACoB,MAAAA,IAAI,EAAC;AAAN,KAAD,EAAqB,GAAGzB,SAAS,EAAjC,CAAf;AACA,SAAKa,QAAL,CAAc;AAACT,MAAAA,MAAM,EAACP,SAAS,EAAjB;AAAoBQ,MAAAA;AAApB,KAAd;AACD;;AAqBDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAM,EAAEC;AAAV,QAAoB,KAAKzB,KAAL,CAAWC,MAArC;AACA,UAAM;AAAEG,MAAAA,QAAF;AAAWD,MAAAA,WAAX;AAAuBiB,MAAAA,aAAvB;AAAqCnB,MAAAA,MAAM,EAACyB;AAA5C,QAAyD,KAAK1B,KAApE;AACA,QAAIyB,KAAK,KAAK,CAAd,EACE,oBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAM,KAAKV,WAAL,EADjB;AAEE,QAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWF,UAAMY,QAAQ,GAAGP,aAAa,IAAIA,aAAa,CAACX,GAA/B,GAAqCiB,SAAS,CAACnB,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACW,KAAF,CAAQV,GAAR,KAAgBW,aAAa,CAACX,GAApD,CAArC,GAAgGiB,SAAjH;AACA,UAAMzB,MAAM,GAAGL,QAAQ,CAAC+B,QAAD,EAAUxB,WAAV,EAAsBC,QAAtB,CAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,MAA7B;AAAqC,UAAA,YAAY,EAAE,KAAKF,KAAL,CAAWoB,aAA9D;AAA6E,UAAA,YAAY,EAAE,KAAKF;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACA;AAAA,iCAAeS,QAAQ,CAACH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AACE,UAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,EADjB;AAEE,UAAA,SAAS,EAAC,qBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAQA,QAAC,WAAD;AAAa,UAAA,MAAM,EAAEd,MAArB;AAA6B,UAAA,MAAM,EAAE,KAAKU,WAA1C;AAAuD,UAAA,QAAQ,EAAE,KAAKN;AAAtE;AAAA;AAAA;AAAA;AAAA,gBARA,eASA,QAAC,UAAD;AACA,UAAA,UAAU,EAAEsB,QAAQ,CAACH,MADrB;AAEA,UAAA,QAAQ,EAAEpB,QAFV;AAGA,UAAA,WAAW,EAAED,WAHb;AAIA,UAAA,YAAY,EAAE,KAAKa;AAJnB;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AAvE4B;;AA0E/B,eAAejB,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport {getGenres} from \"../services/fakeGenreService\";\r\nimport \"../movies.css\";\r\nimport MoviesTable from \"./moviesTable\";\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize:4\r\n  };\r\n  componentDidMount(){\r\n    const genres = [{name:'All Genres'},...getGenres()];\r\n    this.setState({movies:getMovies(),genres})\r\n  }\r\n  handleDelete = (movie) => {\r\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies: movies });\r\n  };\r\n  handleClick = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handleReset = () => {\r\n    this.setState({ movies: getMovies() });\r\n  };\r\n  handlePageChange = page =>{\r\n    this.setState({currentPage:page});\r\n  }\r\n  handleGenreSelect = genre => {\r\n    this.setState({selectedGenre: genre , currentPage: 1})\r\n  }\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize,currentPage,selectedGenre,movies:allMovies} = this.state;\r\n    if (count === 0)\r\n      return (\r\n        <div>\r\n          <span>There are no movies in the database </span>\r\n          <button\r\n            onClick={() => this.handleReset()}\r\n            className=\"btn btn-warning m-2\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      );\r\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\r\n    const movies = paginate(filtered,currentPage,pageSize);\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup items={this.state.genres} selectedItem={this.state.selectedGenre} onItemSelect={this.handleGenreSelect} />\r\n        </div>\r\n        <div className=\"col\">\r\n        <span>Showing {filtered.length} movies in the database </span>\r\n        <button\r\n          onClick={() => this.handleReset()}\r\n          className=\"btn btn-warning m-2\"\r\n        >\r\n          Reset\r\n        </button>\r\n        <MoviesTable movies={movies} onLike={this.handleClick} onDelete={this.handleDelete} />\r\n        <Pagination \r\n        itemsCount={filtered.length} \r\n        pageSize={pageSize} \r\n        currentPage={currentPage} \r\n        onPageChange={this.handlePageChange} \r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}